$gutter-width: 1px !default;
$max-columns: 12 !default;
$prefix: 'flex' !default;

$breakpoints: (
        xs: '(min-width: 0) and (max-width: 599px)',
        sm: '(min-width: 600px) and (max-width: 959px)',
        md: '(min-width: 960px) and (max-width: 1280px)',
        lg: 'only screen and (min-width: 1280px)'
);

@mixin rowMachine($numCol, $columns, $gutter) {
  $width: calc(#{percentage($numCol / $columns)} - #{$gutter} * 2);
  min-width: $width;
  margin: $gutter;
  box-sizing: border-box;

  &.grow {
    flex: 1 1 auto;
  }

  &.none {
    flex: 0 0 auto;
  }
}

%flexit {
  flex-wrap: wrap;
  box-sizing: border-box;
  display: flex;
  min-height: 100%;
  width: 100%;
  flex: 0 1 auto;
}

%styles {

  &.no-wrap {
    flex-wrap: nowrap;
  }

  &.reverse {
    flex-direction: row-reverse;
  }

  &.wrap-reverse {
    flex-wrap: wrap-reverse;
  }

  &.center {
    justify-content: center;
  }

  &.start {
    justify-content: flex-start;
  }

  &.end {
    justify-content: flex-end;
  }

  &.between {
    justify-content: space-between;
  }

  &.around {
    justify-content: space-around;
  }
}

.column {
  @extend %flexit;
  @extend %styles;
  flex-direction: column;
}

.row {
  @extend %flexit;
  @extend %styles;
  flex-direction: row;
}

// Generate Simple
@for $i from 1 through $max-columns {
  .#{$prefix}-#{$i} {
    @include rowMachine($i, $max-columns, $gutter-width);
  }
}

//Generate @media specific
@each $name,
$value in $breakpoints {
  @media #{$value} {
    @for $i from 1 through $max-columns {
      .#{$prefix}-#{$name}-#{$i} {
        @include rowMachine($i, $max-columns, $gutter-width);
      }
    }
  }
}